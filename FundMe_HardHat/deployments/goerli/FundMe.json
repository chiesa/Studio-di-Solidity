{
  "address": "0x8e5ba5CF6b1D914721cBb08a1E94f8EB4783128d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAdd",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1df3833aa5fc8a75207cf5376909df6ba9b249e5beea39c076fe3e04a1f6b9e4",
  "receipt": {
    "to": null,
    "from": "0x3f2e8Dd32d028B14A80856c8da905b0cC4652360",
    "contractAddress": "0x8e5ba5CF6b1D914721cBb08a1E94f8EB4783128d",
    "transactionIndex": 66,
    "gasUsed": "1074723",
    "logsBloom": "0x
    "blockHash": "0xcfb5ce93620dfe4634d4ec8d3466f75ac88824911bc82591d295f47ceca9843c",
    "transactionHash": "0x1df3833aa5fc8a75207cf5376909df6ba9b249e5beea39c076fe3e04a1f6b9e4",
    "logs": [],
    "blockNumber": 7842834,
    "cumulativeGasUsed": "15019975",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "50b4b8415fadb8eb87371ccd7b800090",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAdd\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Samuele\",\"details\":\"this is a very simple contract (note for dev = developer)\",\"kind\":\"dev\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"params\":{\"fundingAddress\":\"the address of the funder\"},\"returns\":{\"_0\":\"the amount funded\"}}},\"title\":\"Fund Me contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this \"},\"getAddressToAmountFunded(address)\":{\"notice\":\"Gets the amount that an address has funded\"}},\"notice\":\"This contract is a contract to study solidity\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe_NotOwner();\\n\\n/** @title Fund Me contract\\n *  @author Samuele\\n *  @notice This contract is a contract to study solidity\\n *  @dev this is a very simple contract (note for dev = developer)\\n */\\n// solc \\u00e8 poi possibile generare la documentazione automaticamente\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public priceFeed;\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe_NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAdd) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAdd);\\n    }\\n\\n    /** \\n     *  @notice This function funds this \\n     */\\n     // se ci fossero si potrebbe aggiungere nel commento sopra:\\n     //@param noparamaters\\n     //@return noreturn \\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n        \\n    function withdraw() public payable onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        //cheaper because we dont work on funders but on a local array (fundersArr)\\n        address[] memory fundersArr = funders;\\n        // mapping can't be in memory\\n        for(uint256 funderIndex = 0; funderIndex < fundersArr.length; funderIndex++){\\n            address funder = fundersArr[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n            funders = new address[](0);\\n            (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n            require(callSuccess, \\\"Call failed\\\");\\n        }\\n    }\\n\\n\\n    /** @notice Gets the amount that an address has funded\\n     *  @param fundingAddress the address of the funder\\n     *  @return the amount funded\\n     */\\n    function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return addressToAmountFunded[fundingAddress];\\n    }\\n} \",\"keccak256\":\"0xe253abedc16f69cc56ce91214f8d1b4db7e0ee3edc1d4927fee589644242b68a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer * 1e10);\\n    }\\n\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFee) internal view returns (uint256){\\n        uint256 ethPrice = getPrice(priceFee);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0xd0256e022891b3a0dd09ef73e77559af4ae0f6ef8c86f5e81b4bf24223d82abf\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620013153803806200131583398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b6111a9806200016c6000396000f3fe6080604052600436106100865760003560e01c8063741bef1a11610059578063741bef1a1461013a578063b60d428814610165578063be2693f01461016f578063dba6335f14610179578063dc0d3dff146101a457610086565b80630343fb251461008b5780633ccfd60b146100c85780633e47d6f3146100d25780636b69a5921461010f575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610ae1565b6101e1565b6040516100bf9190610b27565b60405180910390f35b6100d0610229565b005b3480156100de57600080fd5b506100f960048036038101906100f49190610ae1565b61046b565b6040516101069190610b27565b60405180910390f35b34801561011b57600080fd5b50610124610483565b6040516101319190610b27565b60405180910390f35b34801561014657600080fd5b5061014f610490565b60405161015c9190610ba1565b60405180910390f35b61016d6104b6565b005b6101776105f0565b005b34801561018557600080fd5b5061018e610896565b60405161019b9190610bcb565b60405180910390f35b3480156101b057600080fd5b506101cb60048036038101906101c69190610c12565b6108bc565b6040516101d89190610bcb565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b0576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561035b576000600182815481106102d6576102d5610c3f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061035390610c9d565b9150506102b3565b50600067ffffffffffffffff81111561037757610376610ce6565b5b6040519080825280602002602001820160405280156103a55781602001602082028036833780820191505090505b50600190805190602001906103bb9291906109d7565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103e290610d46565b60006040518083038185875af1925050503d806000811461041f576040519150601f19603f3d011682016040523d82523d6000602084013e610424565b606091505b5050905080610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90610db8565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b18800006104f5600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108fb90919063ffffffff16565b1015610536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052d90610e24565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105849190610e44565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610677576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106fb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b1575b5050505050905060005b815181101561089257600082828151811061072357610722610c3f565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600067ffffffffffffffff81111561078c5761078b610ce6565b5b6040519080825280602002602001820160405280156107ba5781602001602082028036833780820191505090505b50600190805190602001906107d09291906109d7565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107f790610d46565b60006040518083038185875af1925050503d8060008114610834576040519150601f19603f3d011682016040523d82523d6000602084013e610839565b606091505b505090508061087d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087490610db8565b60405180910390fd5b5050808061088a90610c9d565b915050610705565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106108cc57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061090783610937565b90506000670de0b6b3a764000085836109209190610e9a565b61092a9190610f23565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561098057600080fd5b505afa158015610994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b89190610fe1565b5050509150506402540be400816109cf919061105c565b915050919050565b828054828255906000526020600020908101928215610a50579160200282015b82811115610a4f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109f7565b5b509050610a5d9190610a61565b5090565b5b80821115610a7a576000816000905550600101610a62565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aae82610a83565b9050919050565b610abe81610aa3565b8114610ac957600080fd5b50565b600081359050610adb81610ab5565b92915050565b600060208284031215610af757610af6610a7e565b5b6000610b0584828501610acc565b91505092915050565b6000819050919050565b610b2181610b0e565b82525050565b6000602082019050610b3c6000830184610b18565b92915050565b6000819050919050565b6000610b67610b62610b5d84610a83565b610b42565b610a83565b9050919050565b6000610b7982610b4c565b9050919050565b6000610b8b82610b6e565b9050919050565b610b9b81610b80565b82525050565b6000602082019050610bb66000830184610b92565b92915050565b610bc581610aa3565b82525050565b6000602082019050610be06000830184610bbc565b92915050565b610bef81610b0e565b8114610bfa57600080fd5b50565b600081359050610c0c81610be6565b92915050565b600060208284031215610c2857610c27610a7e565b5b6000610c3684828501610bfd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ca882610b0e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cdb57610cda610c6e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d30600083610d15565b9150610d3b82610d20565b600082019050919050565b6000610d5182610d23565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610da2600b83610d5b565b9150610dad82610d6c565b602082019050919050565b60006020820190508181036000830152610dd181610d95565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610e0e601b83610d5b565b9150610e1982610dd8565b602082019050919050565b60006020820190508181036000830152610e3d81610e01565b9050919050565b6000610e4f82610b0e565b9150610e5a83610b0e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e8f57610e8e610c6e565b5b828201905092915050565b6000610ea582610b0e565b9150610eb083610b0e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee957610ee8610c6e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2e82610b0e565b9150610f3983610b0e565b925082610f4957610f48610ef4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f7381610f54565b8114610f7e57600080fd5b50565b600081519050610f9081610f6a565b92915050565b6000819050919050565b610fa981610f96565b8114610fb457600080fd5b50565b600081519050610fc681610fa0565b92915050565b600081519050610fdb81610be6565b92915050565b600080600080600060a08688031215610ffd57610ffc610a7e565b5b600061100b88828901610f81565b955050602061101c88828901610fb7565b945050604061102d88828901610fcc565b935050606061103e88828901610fcc565b925050608061104f88828901610f81565b9150509295509295909350565b600061106782610f96565b915061107283610f96565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110b1576110b0610c6e565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110ee576110ed610c6e565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561112b5761112a610c6e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561116857611167610c6e565b5b82820290509291505056fea26469706673582212203d32455d781434eac311ea36fce0ff008e0730a9e455489408563c30a3711b1264736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063741bef1a11610059578063741bef1a1461013a578063b60d428814610165578063be2693f01461016f578063dba6335f14610179578063dc0d3dff146101a457610086565b80630343fb251461008b5780633ccfd60b146100c85780633e47d6f3146100d25780636b69a5921461010f575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610ae1565b6101e1565b6040516100bf9190610b27565b60405180910390f35b6100d0610229565b005b3480156100de57600080fd5b506100f960048036038101906100f49190610ae1565b61046b565b6040516101069190610b27565b60405180910390f35b34801561011b57600080fd5b50610124610483565b6040516101319190610b27565b60405180910390f35b34801561014657600080fd5b5061014f610490565b60405161015c9190610ba1565b60405180910390f35b61016d6104b6565b005b6101776105f0565b005b34801561018557600080fd5b5061018e610896565b60405161019b9190610bcb565b60405180910390f35b3480156101b057600080fd5b506101cb60048036038101906101c69190610c12565b6108bc565b6040516101d89190610bcb565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b0576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561035b576000600182815481106102d6576102d5610c3f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061035390610c9d565b9150506102b3565b50600067ffffffffffffffff81111561037757610376610ce6565b5b6040519080825280602002602001820160405280156103a55781602001602082028036833780820191505090505b50600190805190602001906103bb9291906109d7565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103e290610d46565b60006040518083038185875af1925050503d806000811461041f576040519150601f19603f3d011682016040523d82523d6000602084013e610424565b606091505b5050905080610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90610db8565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b18800006104f5600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108fb90919063ffffffff16565b1015610536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052d90610e24565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105849190610e44565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610677576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106fb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b1575b5050505050905060005b815181101561089257600082828151811061072357610722610c3f565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600067ffffffffffffffff81111561078c5761078b610ce6565b5b6040519080825280602002602001820160405280156107ba5781602001602082028036833780820191505090505b50600190805190602001906107d09291906109d7565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107f790610d46565b60006040518083038185875af1925050503d8060008114610834576040519150601f19603f3d011682016040523d82523d6000602084013e610839565b606091505b505090508061087d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087490610db8565b60405180910390fd5b5050808061088a90610c9d565b915050610705565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106108cc57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061090783610937565b90506000670de0b6b3a764000085836109209190610e9a565b61092a9190610f23565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561098057600080fd5b505afa158015610994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b89190610fe1565b5050509150506402540be400816109cf919061105c565b915050919050565b828054828255906000526020600020908101928215610a50579160200282015b82811115610a4f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109f7565b5b509050610a5d9190610a61565b5090565b5b80821115610a7a576000816000905550600101610a62565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aae82610a83565b9050919050565b610abe81610aa3565b8114610ac957600080fd5b50565b600081359050610adb81610ab5565b92915050565b600060208284031215610af757610af6610a7e565b5b6000610b0584828501610acc565b91505092915050565b6000819050919050565b610b2181610b0e565b82525050565b6000602082019050610b3c6000830184610b18565b92915050565b6000819050919050565b6000610b67610b62610b5d84610a83565b610b42565b610a83565b9050919050565b6000610b7982610b4c565b9050919050565b6000610b8b82610b6e565b9050919050565b610b9b81610b80565b82525050565b6000602082019050610bb66000830184610b92565b92915050565b610bc581610aa3565b82525050565b6000602082019050610be06000830184610bbc565b92915050565b610bef81610b0e565b8114610bfa57600080fd5b50565b600081359050610c0c81610be6565b92915050565b600060208284031215610c2857610c27610a7e565b5b6000610c3684828501610bfd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ca882610b0e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cdb57610cda610c6e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d30600083610d15565b9150610d3b82610d20565b600082019050919050565b6000610d5182610d23565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610da2600b83610d5b565b9150610dad82610d6c565b602082019050919050565b60006020820190508181036000830152610dd181610d95565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610e0e601b83610d5b565b9150610e1982610dd8565b602082019050919050565b60006020820190508181036000830152610e3d81610e01565b9050919050565b6000610e4f82610b0e565b9150610e5a83610b0e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e8f57610e8e610c6e565b5b828201905092915050565b6000610ea582610b0e565b9150610eb083610b0e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee957610ee8610c6e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2e82610b0e565b9150610f3983610b0e565b925082610f4957610f48610ef4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f7381610f54565b8114610f7e57600080fd5b50565b600081519050610f9081610f6a565b92915050565b6000819050919050565b610fa981610f96565b8114610fb457600080fd5b50565b600081519050610fc681610fa0565b92915050565b600081519050610fdb81610be6565b92915050565b600080600080600060a08688031215610ffd57610ffc610a7e565b5b600061100b88828901610f81565b955050602061101c88828901610fb7565b945050604061102d88828901610fcc565b935050606061103e88828901610fcc565b925050608061104f88828901610f81565b9150509295509295909350565b600061106782610f96565b915061107283610f96565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110b1576110b0610c6e565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110ee576110ed610c6e565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561112b5761112a610c6e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561116857611167610c6e565b5b82820290509291505056fea26469706673582212203d32455d781434eac311ea36fce0ff008e0730a9e455489408563c30a3711b1264736f6c63430008080033",
  "devdoc": {
    "author": "Samuele",
    "details": "this is a very simple contract (note for dev = developer)",
    "kind": "dev",
    "methods": {
      "getAddressToAmountFunded(address)": {
        "params": {
          "fundingAddress": "the address of the funder"
        },
        "returns": {
          "_0": "the amount funded"
        }
      }
    },
    "title": "Fund Me contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this "
      },
      "getAddressToAmountFunded(address)": {
        "notice": "Gets the amount that an address has funded"
      }
    },
    "notice": "This contract is a contract to study solidity",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}